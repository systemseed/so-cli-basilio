name: init
description: Prepare environment variables.
command: |
  cd $so_project_root
           
  # Create a local file with user-specific settings.
  # The file is under gitignore, therefore changes will not be pushed back to the repository.
  cp -n .env.local.default .env.local
  
  # Generate file with docker compose overrides depending
  # on the environment where we execute the Makefile.
  if [ -n "$CIRCLE_BRANCH" ]; then \
    cp -n .docker/compose.override.circleci.yml .docker/compose.override.yml; \
  else \
    cp -n .docker/compose.override.default.yml .docker/compose.override.yml; \
  fi
  
  # Remove existing generated config.
  rm -f .env.generated
  
  # Configure php image for CircleCI and production environment.
  echo "PHP_TAG=${PHP_BASE_VERSION}-${PHP_VERSION_TAG}" >> .env.generated
  
  # Set different PHP image for MacOS and Linux.
  OS=$(uname)
  if [ "$OS" = "Darwin" ]; then \
    echo "PHP_TAG_DEV=${PHP_BASE_VERSION}-dev-macos-${PHP_VERSION_TAG}" >> .env.generated; \
  else \
    echo "PHP_TAG_DEV=${PHP_BASE_VERSION}-dev-${PHP_VERSION_TAG}" >> .env.generated; \
  fi
  
  # Set different Chrome image for MacOS M1 architecture VS others.
  ARCH=$(uname -m)
  if [ "$ARCH" = "arm64" ]; then \
    echo "CHROME_IMAGE=${CHROME_IMAGE_ARM}:${CHROME_TAG_ARM}" >> .env.generated; \
  else \
    echo "CHROME_IMAGE=${CHROME_IMAGE_DEFAULT}:${CHROME_TAG_DEFAULT}" >> .env.generated; \
  fi
  
  # Define variables which point to backups folder for db & files.
  echo "S3_DB_BACKUPS_FOLDER=${AWS_S3_DB_BACKUPS_BUCKET}/${PROJECT_NAME}-master-${PROJECT_TYPE}/" >> .env.generated
  echo "S3_PUBLIC_FILES_BACKUPS_FOLDER=${AWS_S3_FILES_BACKUPS_BUCKET}/${PROJECT_NAME}-master-files-public/" >> .env.generated
  echo "S3_PRIVATE_FILES_BACKUPS_FOLDER=${AWS_S3_FILES_BACKUPS_BUCKET}/${PROJECT_NAME}-master-files-private/" >> .env.generated
  
  so install:check
